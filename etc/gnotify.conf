node:
  type: MASTER

routing:
  recipient_id: giftig-server
  known_recipients: [
    {id: giftig-client, host: localhost, port: 16667}
  ]

logging:
  type: console
  level: DEBUG
  formatter: "%{color}[%{time:2006-01-02 15:04:05}] %{level:.3s}: %{shortfunc}: %{message}%{color:reset}"

sources:
  rest:
    host: localhost
    port: 16666

  calendar:
    auth:
      # Client ID and secret (see developer API console)
      client_id:
        1081816473014-cv0v79hf55ojeds7karirls7lk6c2g5n.apps.googleusercontent.com
      secret: q3MzxFjQEiR5Kuy8-mODkCzk

      # Endpoints for authorising and requesting a token respectively
      auth_endpoint: https://accounts.google.com/o/oauth2/auth
      token_endpoint: https://accounts.google.com/o/oauth2/token

      # The method of retrieving the auth code: ask the user to copy it
      redirect_uri: urn:ietf:wg:oauth:2.0:oob

      # The access scope we're requesting: calendar readonly access
      scope: https://www.googleapis.com/auth/calendar.readonly

      account:
        # The calendar to use
        calendar_id: giftiger.wunsch@gmail.com
        # When a code has been retrieved via the auth endpoint, it's stored here
        code: 4/fFKxglarpWG3Dnkhzub6Ky2D0koc.8uCKmmNZZ_gfoiIBeO6P2m-g6JjgjwI
    polling:
      sync: 1h

    # Golang is weird and makes you specify a datetime format by using the
    # "reference time", 2006-01-02 15:04:05
    datetime_format: 2006-01-02T15:04:05Z
    date_format: 2006-01-02

    disabled: true

  todo:
    file: /home/giftiger_wunsch/Documents/todo.txt

event_types:
  calendar:
    label: google-calendar
  rest:
    label: API
  todo:
    label: todo-list

persistence:
  couch:
    host: localhost
    port: 5984
    db: gnotify_events
  persist: true
